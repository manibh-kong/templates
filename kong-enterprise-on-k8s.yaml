apiVersion: v1
kind: Namespace
metadata:
  name: kong-gw
  annotations:
    kuma.io/sidecar-injection: "enabled"
---    
apiVersion: v1
kind: Service
metadata:
  name: kong-proxy
  namespace: kong-gw
spec:
  type: LoadBalancer
  loadBalancerSourceRanges:
  - 0.0.0.0/0
  ports:
  - name: kong-proxy
    port: 8000
    targetPort: 8000
    protocol: TCP
  selector:
    app: kong

---
apiVersion: v1
kind: Service
metadata:
  name: kong-admin
  namespace: kong-gw
spec:
  type: LoadBalancer
  loadBalancerSourceRanges:
  - 0.0.0.0/0
  ports:
  - name: kong-admin
    port: 8001
    targetPort: 8001
    protocol: TCP
  selector:
    app: kong

---
apiVersion: v1
kind: Service
metadata:
  name: kong-manager
  namespace: kong-gw
spec:
  type: LoadBalancer
  loadBalancerSourceRanges:
  - 0.0.0.0/0
  ports:
  - name: kong-manager
    port: 8002
    targetPort: 8002
    protocol: TCP
  selector:
    app: kong

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-enterprise
  namespace: kong-gw
spec:
  selector:
    matchLabels:
      app: kong
  replicas: 1
  template:
    metadata:
      annotations:
        kuma.io/gateway: enabled
        kuma.io/mesh: default
      labels:
        name: kong-enterprise
        app: kong
    spec:
      imagePullSecrets:
        - name: kong-enterprise-edition-docker
      containers:
      - name: kong
        image: kong/kong-gateway:latest
        env:
          - name: KONG_ADMIN_LISTEN
            value: '0.0.0.0:8001'
          - name: KONG_ADMIN_API_URI
            value: localhost:8001    
          - name: KONG_ADMIN_GUI_LISTEN
            value: '0.0.0.0:8002'
          - name: KONG_ENFORCE_RBAC
            value: 'off'          
          - name: KONG_PG_PASSWORD
            value: kong
          - name: KONG_PG_HOST
            value: postgres
          - name: KONG_PROXY_ACCESS_LOG
            value: /dev/stdout
          - name: KONG_ADMIN_ACCESS_LOG
            value: /dev/stdout
          - name: KONG_PROXY_ERROR_LOG
            value: /dev/stderr
          - name: KONG_ADMIN_ERROR_LOG
            value: /dev/stderr
          # - name: KONG_LICENSE_DATA
            # valueFrom:
            #   secretKeyRef:
            #     name: kong-enterprise-license
            #     key: license
          - name: KONG_PORTAL
            value: 'off'          
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: kong-gw
spec:
  ports:
  - name: pgql
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: kong-gw
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  serviceName: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_USER
          value: kong
        - name: POSTGRES_PASSWORD
          value: kong
        - name: POSTGRES_DB
          value: kong
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        image: postgres:9.5
        name: postgres
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: datadir
          subPath: pgdata
      terminationGracePeriodSeconds: 60
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kong-migrations
  namespace: kong-gw
spec:
  template:
    metadata:
      name: kong-migrations
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - kong migrations bootstrap
        env:
        # - name: KONG_LICENSE_DATA
        #   valueFrom:
        #     secretKeyRef:
        #       key: license
        #       name: kong-enterprise-license       
        - name: KONG_PG_PASSWORD
          value: kong
        - name: KONG_PG_HOST
          value: postgres
        - name: KONG_PG_PORT
          value: "5432"
        image: kong/kong-gateway:latest
        name: kong-migrations      
      initContainers:
      - command:
        - /bin/sh
        - -c
        - until nc -zv $KONG_PG_HOST $KONG_PG_PORT -w1; do echo 'waiting for db'; sleep 1; done
        env:
        - name: KONG_PG_HOST
          value: postgres
        - name: KONG_PG_PORT
          value: "5432"
        image: busybox
        name: wait-for-postgres
      restartPolicy: OnFailure